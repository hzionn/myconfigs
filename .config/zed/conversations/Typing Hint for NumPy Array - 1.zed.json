{"id":"6c0733b2-0666-43e4-9c5a-9937f5eada9f","zed":"context","version":"0.4.0","text":"\n\n\n```py schic-gnn/schicgnn/utils/metrics.py:80-81\n# Excerpt from: def hm_score\n    cont_mat: np.ndarray = contingency_matrix(true_labels, pred_labels)\n\n```\n\nhow to write typing hint for this case?\nTo add typing hints to the `hm_score` function, you need to specify the types of the input parameters and the return type. Based on the provided code snippet, it looks like `true_labels` and `pred_labels` are likely to be arrays or lists of labels, and `cont_mat` is a NumPy array. \n\nHere's an example of how you might add typing hints to the `hm_score` function:\n\n```python\nimport numpy as np\nfrom sklearn.metrics import contingency_matrix\nfrom typing import Union, List\n\ndef hm_score(true_labels: Union[np.ndarray, List[int]], pred_labels: Union[np.ndarray, List[int]]) -> float:\n    cont_mat: np.ndarray = contingency_matrix(true_labels, pred_labels)\n    # Rest of the function implementation\n    return some_float_value  # Replace with the actual return value\n```\n\nIn this example:\n- `true_labels` and `pred_labels` can be either NumPy arrays or lists of integers.\n- The return type of the function is specified as `float`, assuming that the function returns a floating-point score.\n\nMake sure to adjust the return type and the types of the input parameters if they differ from the assumptions made here.\n","messages":[{"id":{"replica_id":0,"value":0},"start":0,"metadata":{"role":"user","status":"Done","timestamp":{"replica_id":0,"value":31}}},{"id":{"replica_id":0,"value":25},"start":198,"metadata":{"role":"assistant","status":"Done","timestamp":{"replica_id":0,"value":32}}},{"id":{"replica_id":0,"value":26},"start":1307,"metadata":{"role":"user","status":"Done","timestamp":{"replica_id":0,"value":33}}}],"summary":"Typing Hint for NumPy Array","slash_command_output_sections":[{"range":{"start":0,"end":1},"icon":"Library","label":"Default","metadata":null},{"range":{"start":3,"end":156},"icon":"TextSnippet","label":"schic-gnn/schicgnn/utils/metrics.py, Lines 80 to 81","metadata":null}]}